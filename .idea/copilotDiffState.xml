<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/fqhll/keyboard/CustomKeyboardApp.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/fqhll/keyboard/CustomKeyboardApp.java" />
              <option name="originalContent" value="package com.fqhll.keyboard;&#10;&#10;import android.content.SharedPreferences;&#10;import android.inputmethodservice.InputMethodService;&#10;import android.inputmethodservice.Keyboard;&#10;import android.inputmethodservice.KeyboardView;&#10;import android.view.KeyEvent;&#10;import android.view.View;&#10;import android.view.inputmethod.EditorInfo;&#10;import android.view.inputmethod.ExtractedTextRequest;&#10;import android.view.inputmethod.InputConnection;&#10;import android.widget.PopupWindow;&#10;import android.widget.TextView;&#10;import android.view.Gravity;&#10;import android.view.ViewGroup;&#10;&#10;import java.util.Arrays;&#10;import java.util.HashSet;&#10;import java.util.Set;&#10;&#10;public class CustomKeyboardApp extends InputMethodService&#10;        implements KeyboardView.OnKeyboardActionListener {&#10;&#10;    private KeyboardView kv;&#10;    private Keyboard keyboard;&#10;&#10;    private PopupWindow keyPreviewPopup;&#10;    private TextView previewText;&#10;&#10;    private int caps_state = 1; // 0 = off, 1 = single shift, 2 = double shift&#10;    private long last_caps_time = 0;&#10;    private boolean defaultCaps = true;&#10;    private static final int DOUBLE_TAP_TIMEOUT = 300; // Smth like Gboard capping&#10;&#10;    // Don't show pop-up for SPACE, CAPS (-1), DELETE (-5), Symbols (-10 from symbols page and -2 from main page), or ENTER (-4)&#10;    private static final Set&lt;Integer&gt; NO_POPUP = new HashSet&lt;&gt;(Arrays.asList(32, -1, -5, -10, -2, -4));&#10;&#10;    @Override&#10;    public View onCreateInputView() {&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;&#10;        // Set key colours&#10;        int layoutId = updateTheme();&#10;        kv = (KeyboardView) getLayoutInflater().inflate(layoutId, null);&#10;&#10;&#10;        keyboard = new Keyboard(this, R.xml.custom_keypad);&#10;        kv.setKeyboard(keyboard);&#10;        kv.setOnKeyboardActionListener(this);&#10;&#10;        // Disable default pop-up&#10;        kv.setPreviewEnabled(false);&#10;&#10;        // Get default caps&#10;        defaultCaps = prefs.getBoolean(&quot;default_caps_enabled&quot;, false);&#10;        caps_state = defaultCaps ? 1 : 0;&#10;        keyboard.setShifted(caps_state &gt; 0);&#10;        updateCapsLabel();&#10;&#10;        // Initialize manual pop-up&#10;        previewText = new TextView(this);&#10;        previewText.setBackgroundColor(getResources().getColor(android.R.color.white));&#10;        previewText.setTextColor(getResources().getColor(android.R.color.black));&#10;        previewText.setTextSize(26f);&#10;        previewText.setGravity(Gravity.CENTER);&#10;&#10;        keyPreviewPopup = new PopupWindow(previewText,&#10;                ViewGroup.LayoutParams.WRAP_CONTENT,&#10;                ViewGroup.LayoutParams.WRAP_CONTENT);&#10;        keyPreviewPopup.setAnimationStyle(0);  // No animation&#10;&#10;        kv.setPreviewEnabled(false); // Remove default setup&#10;&#10;        return kv;&#10;    }&#10;&#10;    @Override&#10;    public void onPress(int primaryCode) {&#10;        if (NO_POPUP.contains(primaryCode)) {&#10;            return;&#10;        }&#10;&#10;        for (Keyboard.Key key : keyboard.getKeys()) {&#10;            if (key.codes[0] == primaryCode) {&#10;                // Set text&#10;                char curr_char = (char) primaryCode;&#10;                previewText.setText(String.valueOf(caps_state &gt; 0 ? Character.toUpperCase(curr_char) : curr_char));&#10;                previewText.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);&#10;&#10;                // Match popup size to key size&#10;                keyPreviewPopup.setWidth(key.width);&#10;                keyPreviewPopup.setHeight(key.height);&#10;&#10;                // Calculate position: center horizontally, one key height above&#10;                int popupX = key.x;&#10;                int popupY = -((kv.getHeight() - key.y) + key.height);&#10;&#10;                // Small adjustment if needed (like Gboard's preview offset)&#10;                int adjustmentY = -4; // fine-tune upward offset (dp to px)&#10;                popupY += (int) (adjustmentY * getResources().getDisplayMetrics().density);&#10;&#10;                keyPreviewPopup.showAsDropDown(kv, popupX, popupY);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onRelease(int primaryCode) {&#10;        if (keyPreviewPopup != null &amp;&amp; keyPreviewPopup.isShowing()) {&#10;            keyPreviewPopup.dismiss();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onKey(int primaryCode, int[] keyCodes) {&#10;        // If it's SHIFT, handle it *before* anything else:&#10;        if (primaryCode == Keyboard.KEYCODE_SHIFT) {&#10;            handleCapsPress();&#10;            return;&#10;        }&#10;&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return;&#10;&#10;        // Always read latest defaultCaps but don't force caps_state here&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;        defaultCaps = prefs.getBoolean(&quot;default_caps_enabled&quot;, false);&#10;&#10;        if (defaultCaps &amp;&amp; isAtLineStart() &amp;&amp; caps_state == 1) {&#10;            applyCapsState();&#10;        }&#10;&#10;        switch (primaryCode) {&#10;            case Keyboard.KEYCODE_DELETE:&#10;                ic.deleteSurroundingText(1, 0);&#10;                adjustCapsAfterDeletion();&#10;                break;&#10;            case -1: // CAPS key&#10;                handleCapsPress();&#10;                break;&#10;            case -2: // symbols&#10;                keyboard = new Keyboard(this, R.xml.symbols);&#10;                kv.setKeyboard(keyboard);&#10;                kv.invalidateAllKeys();&#10;                break;&#10;            case -10: // back to main&#10;                keyboard = new Keyboard(this, R.xml.custom_keypad);&#10;                kv.setKeyboard(keyboard);&#10;                applyCapsState();&#10;                break;&#10;            case Keyboard.KEYCODE_DONE:&#10;                EditorInfo editorInfo = getCurrentInputEditorInfo();&#10;                if (editorInfo != null &amp;&amp; (editorInfo.imeOptions &amp; EditorInfo.IME_FLAG_NO_ENTER_ACTION) != 0) {&#10;                    ic.commitText(&quot;\n&quot;, 1);  // Insert newline&#10;                } else {&#10;                    ic.sendKeyEvent(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_ENTER));&#10;                    ic.sendKeyEvent(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_ENTER));&#10;                }&#10;                resetCaps();&#10;                break;&#10;            default:&#10;                char code = (char) primaryCode;&#10;                if (Character.isLetter(code)) {&#10;                    if (caps_state &gt; 0) {&#10;                        code = Character.toUpperCase(code);&#10;                    }&#10;                }&#10;                ic.commitText(String.valueOf(code), 1);&#10;&#10;                // If single-shift was used, reset to 0&#10;                if (caps_state == 1) {&#10;                    resetCaps();&#10;                }&#10;&#10;                // Auto-cap if punctuation (e.g., after &quot;. &quot;)&#10;                if (shouldAutoCap() &amp;&amp; defaultCaps) {&#10;                    caps_state = 1;&#10;                    applyCapsState();&#10;                }&#10;                break;&#10;        }&#10;    }&#10;&#10;    private boolean shouldAutoCap() {&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return false;&#10;&#10;        CharSequence beforeText = ic.getTextBeforeCursor(4, 0); // Check last 4 chars&#10;        if (beforeText == null || beforeText.length() &lt; 2) return false;&#10;&#10;        String lastText = beforeText.toString();&#10;        // Check for &quot;. &quot; but not &quot;...&quot;&#10;        return lastText.endsWith(&quot;. &quot;) &amp;&amp; !lastText.endsWith(&quot;... &quot;);&#10;    }&#10;&#10;    private boolean isAtLineStart() {&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return false;&#10;&#10;        CharSequence beforeText = ic.getTextBeforeCursor(1, 0);&#10;        // Beginning of text or right after a newline&#10;        return (beforeText == null || beforeText.length() == 0 || beforeText.charAt(0) == '\n');&#10;    }&#10;&#10;    private void adjustCapsAfterDeletion() {&#10;        if (caps_state == 2) {&#10;            return;&#10;        }&#10;&#10;        if (defaultCaps &amp;&amp; isAtLineStart()) {&#10;            caps_state = 1;&#10;        } else if (shouldAutoCap() &amp;&amp; defaultCaps) {&#10;            caps_state = 1;&#10;        } else {&#10;            caps_state = 0;&#10;        }&#10;        applyCapsState();&#10;    }&#10;&#10;    @Override&#10;    public void onFinishInput() {&#10;        super.onFinishInput();&#10;        resetCaps(); // Reset caps or perform actions&#10;    }&#10;&#10;    @Override&#10;    public void onUpdateSelection(int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd,&#10;                                  int candidatesStart, int candidatesEnd) {&#10;        super.onUpdateSelection(oldSelStart, oldSelEnd, newSelStart, newSelEnd, candidatesStart, candidatesEnd);&#10;&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return;&#10;&#10;        CharSequence text = ic.getExtractedText(new ExtractedTextRequest(), 0).text;&#10;        if (text == null) return;&#10;&#10;        // Case 1: Empty field (new message)&#10;        if (text.length() == 0) {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Auto-cap new message&#10;            } else {&#10;                caps_state = 0;&#10;            }&#10;            applyCapsState();&#10;            return;&#10;        }&#10;&#10;        // Case 2: Cursor at start of line or after newline&#10;        CharSequence before = ic.getTextBeforeCursor(1, 0);&#10;        if (before != null &amp;&amp; (before.length() == 0 || before.charAt(0) == '\n')) {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Auto-cap after newline&#10;            } else if (caps_state != 2) {&#10;                caps_state = 0;&#10;            }&#10;        }&#10;&#10;        // Case 3: Check if deletion leads to beginning of line&#10;        CharSequence prevChar = ic.getTextBeforeCursor(2, 0);&#10;        if (prevChar != null &amp;&amp; prevChar.length() &gt;= 1 &amp;&amp; prevChar.charAt(prevChar.length() - 1) == '\n') {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Capitalize again after deleting to new line start&#10;            }&#10;        }&#10;&#10;        applyCapsState();&#10;    }&#10;&#10;    private void resetCaps() {&#10;        if (caps_state == 2) return;  // Never reset caps lock&#10;&#10;        if (caps_state == 1 &amp;&amp; !isAtLineStart()) {&#10;            caps_state = 0;&#10;        } else if (defaultCaps &amp;&amp; isAtLineStart()) {&#10;            caps_state = 1;&#10;        }&#10;        applyCapsState();&#10;    }&#10;&#10;    private void handleCapsPress() {&#10;        long curr_time = System.currentTimeMillis();&#10;        if (curr_time - last_caps_time &lt; DOUBLE_TAP_TIMEOUT) {&#10;            // Double tap detected -&gt; toggle caps lock&#10;            caps_state = (caps_state == 2) ? 0 : 2;&#10;        } else {&#10;            // Single tap: toggle between off and single shift&#10;            if (caps_state == 0) {&#10;                caps_state = 1; // single shift&#10;            } else if (caps_state == 1) {&#10;                caps_state = 0; // back to off&#10;            } else if (caps_state == 2) {&#10;                caps_state = 0; // exit caps lock&#10;            }&#10;        }&#10;        last_caps_time = curr_time;&#10;        applyCapsState();&#10;    }&#10;&#10;    private void updateCapsLabel() {&#10;        for (Keyboard.Key key : keyboard.getKeys()) {&#10;            if (key.codes[0] == -1) { // CAPS key&#10;                if (caps_state == 0) {&#10;                    key.label = &quot;caps&quot;;&#10;                } else if (caps_state == 1) {&#10;                    key.label = &quot;Caps&quot;;&#10;                } else {&#10;                    key.label = &quot;CAPS&quot;;&#10;                }&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    private void applyCapsState() {&#10;        keyboard.setShifted(caps_state &gt; 0);&#10;        updateCapsLabel();&#10;        kv.invalidateAllKeys();&#10;    }&#10;&#10;&#10;    private int updateTheme() {&#10;        // Retrieve the saved key color preference&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;        String keyColor = prefs.getString(&quot;key_color&quot;, &quot;default&quot;);&#10;        String keyColorLayout = &quot;custom_keyboard_layout_&quot; + keyColor;&#10;&#10;        // Get the layout resource ID for the selected color&#10;        int layoutId = getResources().getIdentifier(keyColorLayout, &quot;layout&quot;, getPackageName());&#10;&#10;        return layoutId;&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onStartInputView(EditorInfo info, boolean restarting) {&#10;        super.onStartInputView(info, restarting);&#10;        caps_state = defaultCaps ? 1 : 0;&#10;        applyCapsState();  // Just updates the shift key appearance&#10;&#10;        // Retrieve the layout ID for the selected theme&#10;        int layoutId = updateTheme();&#10;&#10;        // Re-inflate the keyboard view with the selected color layout&#10;        kv = (KeyboardView) getLayoutInflater().inflate(layoutId, null);&#10;        kv.setKeyboard(keyboard);&#10;        kv.setOnKeyboardActionListener(this);&#10;&#10;        // Set the new keyboard view&#10;        setInputView(kv);&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onText(CharSequence charSequence) {&#10;    }&#10;&#10;    @Override&#10;    public void swipeLeft() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeRight() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeDown() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeUp() {&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.fqhll.keyboard;&#10;&#10;import android.content.SharedPreferences;&#10;import android.inputmethodservice.InputMethodService;&#10;import android.inputmethodservice.Keyboard;&#10;import android.inputmethodservice.KeyboardView;&#10;import android.view.KeyEvent;&#10;import android.view.View;&#10;import android.view.inputmethod.EditorInfo;&#10;import android.view.inputmethod.ExtractedTextRequest;&#10;import android.view.inputmethod.InputConnection;&#10;import android.widget.PopupWindow;&#10;import android.widget.TextView;&#10;import android.view.Gravity;&#10;import android.view.ViewGroup;&#10;&#10;import java.util.Arrays;&#10;import java.util.HashSet;&#10;import java.util.Set;&#10;&#10;public class CustomKeyboardApp extends InputMethodService&#10;        implements KeyboardView.OnKeyboardActionListener {&#10;&#10;    private KeyboardView kv;&#10;    private Keyboard keyboard;&#10;&#10;    private PopupWindow keyPreviewPopup;&#10;    private TextView previewText;&#10;&#10;    private int caps_state = 1; // 0 = off, 1 = single shift, 2 = double shift&#10;    private long last_caps_time = 0;&#10;    private boolean defaultCaps = true;&#10;    private static final int DOUBLE_TAP_TIMEOUT = 300; // Smth like Gboard capping&#10;&#10;    // Don't show pop-up for SPACE, CAPS (-1), DELETE (-5), Symbols (-10 from symbols page and -2 from main page), or ENTER (-4)&#10;    private static final Set&lt;Integer&gt; NO_POPUP = new HashSet&lt;&gt;(Arrays.asList(32, -1, -5, -10, -2, -4));&#10;&#10;    @Override&#10;    public View onCreateInputView() {&#10;&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;&#10;        // Dynamically apply the theme&#10;        String keyColor = prefs.getString(&quot;key_color&quot;, &quot;Black&quot;);&#10;        int themeId = getResources().getIdentifier(&quot;Theme.FQHLLKeyboard.&quot; + keyColor, &quot;style&quot;, getPackageName());&#10;        if (themeId != 0) {&#10;            getTheme().applyStyle(themeId, true);&#10;        }&#10;&#10;        kv = (KeyboardView) getLayoutInflater().inflate(R.layout.custom_keyboard_layout_default, null);&#10;        keyboard = new Keyboard(this, R.xml.custom_keypad);&#10;        kv.setKeyboard(keyboard);&#10;        kv.setOnKeyboardActionListener(this);&#10;&#10;        // Disable default pop-up&#10;        kv.setPreviewEnabled(false);&#10;&#10;        // Get default caps&#10;        defaultCaps = prefs.getBoolean(&quot;default_caps_enabled&quot;, false);&#10;        caps_state = defaultCaps ? 1 : 0;&#10;        keyboard.setShifted(caps_state &gt; 0);&#10;        updateCapsLabel();&#10;&#10;        // Initialize manual pop-up&#10;        previewText = new TextView(this);&#10;        previewText.setBackgroundColor(getResources().getColor(android.R.color.white));&#10;        previewText.setTextColor(getResources().getColor(android.R.color.black));&#10;        previewText.setTextSize(26f);&#10;        previewText.setGravity(Gravity.CENTER);&#10;&#10;        keyPreviewPopup = new PopupWindow(previewText,&#10;                ViewGroup.LayoutParams.WRAP_CONTENT,&#10;                ViewGroup.LayoutParams.WRAP_CONTENT);&#10;        keyPreviewPopup.setAnimationStyle(0);  // No animation&#10;&#10;        kv.setPreviewEnabled(false); // Remove default setup&#10;&#10;        return kv;&#10;    }&#10;&#10;    @Override&#10;    public void onPress(int primaryCode) {&#10;        if (NO_POPUP.contains(primaryCode)) {&#10;            return;&#10;        }&#10;&#10;        for (Keyboard.Key key : keyboard.getKeys()) {&#10;            if (key.codes[0] == primaryCode) {&#10;                // Set text&#10;                char curr_char = (char) primaryCode;&#10;                previewText.setText(String.valueOf(caps_state &gt; 0 ? Character.toUpperCase(curr_char) : curr_char));&#10;                previewText.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);&#10;&#10;                // Match popup size to key size&#10;                keyPreviewPopup.setWidth(key.width);&#10;                keyPreviewPopup.setHeight(key.height);&#10;&#10;                // Calculate position: center horizontally, one key height above&#10;                int popupX = key.x;&#10;                int popupY = -((kv.getHeight() - key.y) + key.height);&#10;&#10;                // Small adjustment if needed (like Gboard's preview offset)&#10;                int adjustmentY = -4; // fine-tune upward offset (dp to px)&#10;                popupY += (int) (adjustmentY * getResources().getDisplayMetrics().density);&#10;&#10;                keyPreviewPopup.showAsDropDown(kv, popupX, popupY);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onRelease(int primaryCode) {&#10;        if (keyPreviewPopup != null &amp;&amp; keyPreviewPopup.isShowing()) {&#10;            keyPreviewPopup.dismiss();&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onKey(int primaryCode, int[] keyCodes) {&#10;        // If it's SHIFT, handle it *before* anything else:&#10;        if (primaryCode == Keyboard.KEYCODE_SHIFT) {&#10;            handleCapsPress();&#10;            return;&#10;        }&#10;&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return;&#10;&#10;        // Always read latest defaultCaps but don't force caps_state here&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;        defaultCaps = prefs.getBoolean(&quot;default_caps_enabled&quot;, false);&#10;&#10;        if (defaultCaps &amp;&amp; isAtLineStart() &amp;&amp; caps_state == 1) {&#10;            applyCapsState();&#10;        }&#10;&#10;        switch (primaryCode) {&#10;            case Keyboard.KEYCODE_DELETE:&#10;                ic.deleteSurroundingText(1, 0);&#10;                adjustCapsAfterDeletion();&#10;                break;&#10;            case -1: // CAPS key&#10;                handleCapsPress();&#10;                break;&#10;            case -2: // symbols&#10;                keyboard = new Keyboard(this, R.xml.symbols);&#10;                kv.setKeyboard(keyboard);&#10;                kv.invalidateAllKeys();&#10;                break;&#10;            case -10: // back to main&#10;                keyboard = new Keyboard(this, R.xml.custom_keypad);&#10;                kv.setKeyboard(keyboard);&#10;                applyCapsState();&#10;                break;&#10;            case Keyboard.KEYCODE_DONE:&#10;                EditorInfo editorInfo = getCurrentInputEditorInfo();&#10;                if (editorInfo != null &amp;&amp; (editorInfo.imeOptions &amp; EditorInfo.IME_FLAG_NO_ENTER_ACTION) != 0) {&#10;                    ic.commitText(&quot;\n&quot;, 1);  // Insert newline&#10;                } else {&#10;                    ic.sendKeyEvent(new KeyEvent(KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_ENTER));&#10;                    ic.sendKeyEvent(new KeyEvent(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_ENTER));&#10;                }&#10;                resetCaps();&#10;                break;&#10;            default:&#10;                char code = (char) primaryCode;&#10;                if (Character.isLetter(code)) {&#10;                    if (caps_state &gt; 0) {&#10;                        code = Character.toUpperCase(code);&#10;                    }&#10;                }&#10;                ic.commitText(String.valueOf(code), 1);&#10;&#10;                // If single-shift was used, reset to 0&#10;                if (caps_state == 1) {&#10;                    resetCaps();&#10;                }&#10;&#10;                // Auto-cap if punctuation (e.g., after &quot;. &quot;)&#10;                if (shouldAutoCap() &amp;&amp; defaultCaps) {&#10;                    caps_state = 1;&#10;                    applyCapsState();&#10;                }&#10;                break;&#10;        }&#10;    }&#10;&#10;    private boolean shouldAutoCap() {&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return false;&#10;&#10;        CharSequence beforeText = ic.getTextBeforeCursor(4, 0); // Check last 4 chars&#10;        if (beforeText == null || beforeText.length() &lt; 2) return false;&#10;&#10;        String lastText = beforeText.toString();&#10;        // Check for &quot;. &quot; but not &quot;...&quot;&#10;        return lastText.endsWith(&quot;. &quot;) &amp;&amp; !lastText.endsWith(&quot;... &quot;);&#10;    }&#10;&#10;    private boolean isAtLineStart() {&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return false;&#10;&#10;        CharSequence beforeText = ic.getTextBeforeCursor(1, 0);&#10;        // Beginning of text or right after a newline&#10;        return (beforeText == null || beforeText.length() == 0 || beforeText.charAt(0) == '\n');&#10;    }&#10;&#10;    private void adjustCapsAfterDeletion() {&#10;        if (caps_state == 2) {&#10;            return;&#10;        }&#10;&#10;        if (defaultCaps &amp;&amp; isAtLineStart()) {&#10;            caps_state = 1;&#10;        } else if (shouldAutoCap() &amp;&amp; defaultCaps) {&#10;            caps_state = 1;&#10;        } else {&#10;            caps_state = 0;&#10;        }&#10;        applyCapsState();&#10;    }&#10;&#10;    @Override&#10;    public void onFinishInput() {&#10;        super.onFinishInput();&#10;        resetCaps(); // Reset caps or perform actions&#10;    }&#10;&#10;    @Override&#10;    public void onUpdateSelection(int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd,&#10;                                  int candidatesStart, int candidatesEnd) {&#10;        super.onUpdateSelection(oldSelStart, oldSelEnd, newSelStart, newSelEnd, candidatesStart, candidatesEnd);&#10;&#10;        InputConnection ic = getCurrentInputConnection();&#10;        if (ic == null) return;&#10;&#10;        CharSequence text = ic.getExtractedText(new ExtractedTextRequest(), 0).text;&#10;        if (text == null) return;&#10;&#10;        // Case 1: Empty field (new message)&#10;        if (text.length() == 0) {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Auto-cap new message&#10;            } else {&#10;                caps_state = 0;&#10;            }&#10;            applyCapsState();&#10;            return;&#10;        }&#10;&#10;        // Case 2: Cursor at start of line or after newline&#10;        CharSequence before = ic.getTextBeforeCursor(1, 0);&#10;        if (before != null &amp;&amp; (before.length() == 0 || before.charAt(0) == '\n')) {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Auto-cap after newline&#10;            } else if (caps_state != 2) {&#10;                caps_state = 0;&#10;            }&#10;        }&#10;&#10;        // Case 3: Check if deletion leads to beginning of line&#10;        CharSequence prevChar = ic.getTextBeforeCursor(2, 0);&#10;        if (prevChar != null &amp;&amp; prevChar.length() &gt;= 1 &amp;&amp; prevChar.charAt(prevChar.length() - 1) == '\n') {&#10;            if (defaultCaps) {&#10;                caps_state = 1; // Capitalize again after deleting to new line start&#10;            }&#10;        }&#10;&#10;        applyCapsState();&#10;    }&#10;&#10;    private void resetCaps() {&#10;        if (caps_state == 2) return;  // Never reset caps lock&#10;&#10;        if (caps_state == 1 &amp;&amp; !isAtLineStart()) {&#10;            caps_state = 0;&#10;        } else if (defaultCaps &amp;&amp; isAtLineStart()) {&#10;            caps_state = 1;&#10;        }&#10;        applyCapsState();&#10;    }&#10;&#10;    private void handleCapsPress() {&#10;        long curr_time = System.currentTimeMillis();&#10;        if (curr_time - last_caps_time &lt; DOUBLE_TAP_TIMEOUT) {&#10;            // Double tap detected -&gt; toggle caps lock&#10;            caps_state = (caps_state == 2) ? 0 : 2;&#10;        } else {&#10;            // Single tap: toggle between off and single shift&#10;            if (caps_state == 0) {&#10;                caps_state = 1; // single shift&#10;            } else if (caps_state == 1) {&#10;                caps_state = 0; // back to off&#10;            } else if (caps_state == 2) {&#10;                caps_state = 0; // exit caps lock&#10;            }&#10;        }&#10;        last_caps_time = curr_time;&#10;        applyCapsState();&#10;    }&#10;&#10;    private void updateCapsLabel() {&#10;        for (Keyboard.Key key : keyboard.getKeys()) {&#10;            if (key.codes[0] == -1) { // CAPS key&#10;                if (caps_state == 0) {&#10;                    key.label = &quot;caps&quot;;&#10;                } else if (caps_state == 1) {&#10;                    key.label = &quot;Caps&quot;;&#10;                } else {&#10;                    key.label = &quot;CAPS&quot;;&#10;                }&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    private void applyCapsState() {&#10;        keyboard.setShifted(caps_state &gt; 0);&#10;        updateCapsLabel();&#10;        kv.invalidateAllKeys();&#10;    }&#10;&#10;&#10;    private int updateTheme() {&#10;        // Retrieve the saved key color preference&#10;        SharedPreferences prefs = getSharedPreferences(&quot;keyboard_settings&quot;, MODE_PRIVATE);&#10;        String keyColor = prefs.getString(&quot;key_color&quot;, &quot;default&quot;);&#10;        String keyColorLayout = &quot;custom_keyboard_layout_&quot; + keyColor;&#10;&#10;        // Get the layout resource ID for the selected color&#10;        int layoutId = getResources().getIdentifier(keyColorLayout, &quot;layout&quot;, getPackageName());&#10;&#10;        return layoutId;&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onStartInputView(EditorInfo info, boolean restarting) {&#10;        super.onStartInputView(info, restarting);&#10;        caps_state = defaultCaps ? 1 : 0;&#10;        applyCapsState();  // Just updates the shift key appearance&#10;&#10;        // Retrieve the layout ID for the selected theme&#10;        int layoutId = updateTheme();&#10;&#10;        // Re-inflate the keyboard view with the selected color layout&#10;        kv = (KeyboardView) getLayoutInflater().inflate(layoutId, null);&#10;        kv.setKeyboard(keyboard);&#10;        kv.setOnKeyboardActionListener(this);&#10;&#10;        // Set the new keyboard view&#10;        setInputView(kv);&#10;    }&#10;&#10;&#10;    @Override&#10;    public void onText(CharSequence charSequence) {&#10;    }&#10;&#10;    @Override&#10;    public void swipeLeft() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeRight() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeDown() {&#10;    }&#10;&#10;    @Override&#10;    public void swipeUp() {&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/key_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/key_background.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@color/black&quot;/&gt;&#10;    &lt;corners android:radius=&quot;5dp&quot; /&gt;&#10;&lt;/shape&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;?attr/keyBackgroundColor&quot; /&gt;&#10;    &lt;corners android:radius=&quot;5dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.FQHLLKeyboard&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/purple_500&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/purple_700&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/teal_200&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/teal_700&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/black&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimaryVariant&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.dark_blue&quot;&gt;&#10;        &lt;item name=&quot;keyColor&quot;&gt;@color/custom_dark_blue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Theme.FQHLLKeyboard&quot; parent=&quot;Theme.MaterialComponents.DayNight.DarkActionBar&quot;&gt;&#10;        &lt;!-- Primary brand color. --&gt;&#10;        &lt;item name=&quot;colorPrimary&quot;&gt;@color/purple_500&lt;/item&gt;&#10;        &lt;item name=&quot;colorPrimaryVariant&quot;&gt;@color/purple_700&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnPrimary&quot;&gt;@color/white&lt;/item&gt;&#10;        &lt;!-- Secondary brand color. --&gt;&#10;        &lt;item name=&quot;colorSecondary&quot;&gt;@color/teal_200&lt;/item&gt;&#10;        &lt;item name=&quot;colorSecondaryVariant&quot;&gt;@color/teal_700&lt;/item&gt;&#10;        &lt;item name=&quot;colorOnSecondary&quot;&gt;@color/black&lt;/item&gt;&#10;        &lt;!-- Status bar color. --&gt;&#10;        &lt;item name=&quot;android:statusBarColor&quot;&gt;?attr/colorPrimaryVariant&lt;/item&gt;&#10;        &lt;!-- Customize your theme here. --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.dark_blue&quot;&gt;&#10;        &lt;item name=&quot;keyColor&quot;&gt;@color/custom_dark_blue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.FQHLLKeyboard.Black&quot; parent=&quot;Theme.FQHLLKeyboard&quot;&gt;&#10;        &lt;item name=&quot;keyBackgroundColor&quot;&gt;@color/black&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;Theme.FQHLLKeyboard.DarkBlue&quot; parent=&quot;Theme.FQHLLKeyboard&quot;&gt;&#10;        &lt;item name=&quot;keyBackgroundColor&quot;&gt;@color/custom_dark_blue&lt;/item&gt;&#10;    &lt;/style&gt;&#10;    &lt;style name=&quot;Theme.FQHLLKeyboard.Cyan&quot; parent=&quot;Theme.FQHLLKeyboard&quot;&gt;&#10;        &lt;item name=&quot;keyBackgroundColor&quot;&gt;@color/custom_cyan&lt;/item&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/caps_keypad.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/caps_keypad.xml" />
              <option name="originalContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;55dp&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;q&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;w&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;e&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;r&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;t&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;y&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;u&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;i&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;o&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;a&quot; android:keyWidth=&quot;15%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;s&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;d&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;f&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;g&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;h&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;j&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;k&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;l&quot; android:keyWidth=&quot;15%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;z&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;x&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;c&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;v&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;b&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;n&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;m&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;        &lt;!-- &lt;Key android:codes=&quot;63,33,58&quot; android:keyLabel=&quot;\? ! :&quot;/&gt;&#9; --&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;47&quot; android:keyLabel=&quot;/&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;60%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyOutputText=&quot;\\n&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;55dp&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;Q&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;W&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;E&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;R&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;T&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;Y&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;U&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;I&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;O&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;P&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;A&quot; android:keyWidth=&quot;15%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;S&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;D&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;F&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;G&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;H&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;J&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;K&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;L&quot; android:keyWidth=&quot;15%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;Z&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;X&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;C&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;V&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;B&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;N&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;M&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;        &lt;!-- &lt;Key android:codes=&quot;63,33,58&quot; android:keyLabel=&quot;\? ! :&quot;/&gt;&#9; --&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;47&quot; android:keyLabel=&quot;/&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;60%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyOutputText=&quot;\\n&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_azerty.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_azerty.xml" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;@dimen/key_height&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;49&quot; android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;50&quot; android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:codes=&quot;51&quot; android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:codes=&quot;52&quot; android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:codes=&quot;53&quot; android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:codes=&quot;54&quot; android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:codes=&quot;55&quot; android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:codes=&quot;56&quot; android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:codes=&quot;57&quot; android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:codes=&quot;48&quot; android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;97&quot; android:keyLabel=&quot;a&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;122&quot; android:keyLabel=&quot;z&quot;/&gt;&#10;        &lt;Key android:codes=&quot;101&quot; android:keyLabel=&quot;e&quot;/&gt;&#10;        &lt;Key android:codes=&quot;114&quot; android:keyLabel=&quot;r&quot;/&gt;&#10;        &lt;Key android:codes=&quot;116&quot; android:keyLabel=&quot;t&quot;/&gt;&#10;        &lt;Key android:codes=&quot;121&quot; android:keyLabel=&quot;y&quot;/&gt;&#10;        &lt;Key android:codes=&quot;117&quot; android:keyLabel=&quot;u&quot;/&gt;&#10;        &lt;Key android:codes=&quot;105&quot; android:keyLabel=&quot;i&quot;/&gt;&#10;        &lt;Key android:codes=&quot;111&quot; android:keyLabel=&quot;o&quot;/&gt;&#10;        &lt;Key android:codes=&quot;112&quot; android:keyLabel=&quot;p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;113&quot; android:keyLabel=&quot;q&quot; android:horizontalGap=&quot;5%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;115&quot; android:keyLabel=&quot;s&quot;/&gt;&#10;        &lt;Key android:codes=&quot;100&quot; android:keyLabel=&quot;d&quot;/&gt;&#10;        &lt;Key android:codes=&quot;102&quot; android:keyLabel=&quot;f&quot;/&gt;&#10;        &lt;Key android:codes=&quot;103&quot; android:keyLabel=&quot;g&quot;/&gt;&#10;        &lt;Key android:codes=&quot;104&quot; android:keyLabel=&quot;h&quot;/&gt;&#10;        &lt;Key android:codes=&quot;106&quot; android:keyLabel=&quot;j&quot;/&gt;&#10;        &lt;Key android:codes=&quot;107&quot; android:keyLabel=&quot;k&quot;/&gt;&#10;        &lt;Key android:codes=&quot;108&quot; android:keyLabel=&quot;l&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;109&quot; android:keyLabel=&quot;m&quot;/&gt;&#10;        &lt;Key android:codes=&quot;119&quot; android:keyLabel=&quot;w&quot;/&gt;&#10;        &lt;Key android:codes=&quot;120&quot; android:keyLabel=&quot;x&quot;/&gt;&#10;        &lt;Key android:codes=&quot;99&quot; android:keyLabel=&quot;c&quot;/&gt;&#10;        &lt;Key android:codes=&quot;118&quot; android:keyLabel=&quot;v&quot;/&gt;&#10;        &lt;Key android:codes=&quot;98&quot; android:keyLabel=&quot;b&quot;/&gt;&#10;        &lt;Key android:codes=&quot;110&quot; android:keyLabel=&quot;n&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-2&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-11&quot; android:keyLabel=&quot;☻&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-12&quot; android:keyLabel=&quot;⎋&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_colemak.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_colemak.xml" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;@dimen/key_height&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;49&quot; android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;50&quot; android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:codes=&quot;51&quot; android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:codes=&quot;52&quot; android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:codes=&quot;53&quot; android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:codes=&quot;54&quot; android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:codes=&quot;55&quot; android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:codes=&quot;56&quot; android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:codes=&quot;57&quot; android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:codes=&quot;48&quot; android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;113&quot; android:keyLabel=&quot;q&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;119&quot; android:keyLabel=&quot;w&quot;/&gt;&#10;        &lt;Key android:codes=&quot;102&quot; android:keyLabel=&quot;f&quot;/&gt;&#10;        &lt;Key android:codes=&quot;112&quot; android:keyLabel=&quot;p&quot;/&gt;&#10;        &lt;Key android:codes=&quot;103&quot; android:keyLabel=&quot;g&quot;/&gt;&#10;        &lt;Key android:codes=&quot;106&quot; android:keyLabel=&quot;j&quot;/&gt;&#10;        &lt;Key android:codes=&quot;108&quot; android:keyLabel=&quot;l&quot;/&gt;&#10;        &lt;Key android:codes=&quot;117&quot; android:keyLabel=&quot;u&quot;/&gt;&#10;        &lt;Key android:codes=&quot;121&quot; android:keyLabel=&quot;y&quot;/&gt;&#10;        &lt;Key android:codes=&quot;59&quot; android:keyLabel=&quot;;&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;97&quot; android:keyLabel=&quot;a&quot; android:horizontalGap=&quot;5%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;114&quot; android:keyLabel=&quot;r&quot;/&gt;&#10;        &lt;Key android:codes=&quot;115&quot; android:keyLabel=&quot;s&quot;/&gt;&#10;        &lt;Key android:codes=&quot;116&quot; android:keyLabel=&quot;t&quot;/&gt;&#10;        &lt;Key android:codes=&quot;100&quot; android:keyLabel=&quot;d&quot;/&gt;&#10;        &lt;Key android:codes=&quot;104&quot; android:keyLabel=&quot;h&quot;/&gt;&#10;        &lt;Key android:codes=&quot;110&quot; android:keyLabel=&quot;n&quot;/&gt;&#10;        &lt;Key android:codes=&quot;101&quot; android:keyLabel=&quot;e&quot;/&gt;&#10;        &lt;Key android:codes=&quot;105&quot; android:keyLabel=&quot;i&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;122&quot; android:keyLabel=&quot;z&quot;/&gt;&#10;        &lt;Key android:codes=&quot;120&quot; android:keyLabel=&quot;x&quot;/&gt;&#10;        &lt;Key android:codes=&quot;99&quot; android:keyLabel=&quot;c&quot;/&gt;&#10;        &lt;Key android:codes=&quot;118&quot; android:keyLabel=&quot;v&quot;/&gt;&#10;        &lt;Key android:codes=&quot;98&quot; android:keyLabel=&quot;b&quot;/&gt;&#10;        &lt;Key android:codes=&quot;107&quot; android:keyLabel=&quot;k&quot;/&gt;&#10;        &lt;Key android:codes=&quot;109&quot; android:keyLabel=&quot;m&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-2&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-11&quot; android:keyLabel=&quot;☻&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-12&quot; android:keyLabel=&quot;⎋&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_dvorak.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_dvorak.xml" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;@dimen/key_height&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;49&quot; android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;50&quot; android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:codes=&quot;51&quot; android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:codes=&quot;52&quot; android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:codes=&quot;53&quot; android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:codes=&quot;54&quot; android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:codes=&quot;55&quot; android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:codes=&quot;56&quot; android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:codes=&quot;57&quot; android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:codes=&quot;48&quot; android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;39&quot; android:keyLabel=&quot;'&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;112&quot; android:keyLabel=&quot;p&quot;/&gt;&#10;        &lt;Key android:codes=&quot;121&quot; android:keyLabel=&quot;y&quot;/&gt;&#10;        &lt;Key android:codes=&quot;102&quot; android:keyLabel=&quot;f&quot;/&gt;&#10;        &lt;Key android:codes=&quot;103&quot; android:keyLabel=&quot;g&quot;/&gt;&#10;        &lt;Key android:codes=&quot;99&quot; android:keyLabel=&quot;c&quot;/&gt;&#10;        &lt;Key android:codes=&quot;114&quot; android:keyLabel=&quot;r&quot;/&gt;&#10;        &lt;Key android:codes=&quot;108&quot; android:keyLabel=&quot;l&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;97&quot; android:keyLabel=&quot;a&quot; android:horizontalGap=&quot;5%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;111&quot; android:keyLabel=&quot;o&quot;/&gt;&#10;        &lt;Key android:codes=&quot;101&quot; android:keyLabel=&quot;e&quot;/&gt;&#10;        &lt;Key android:codes=&quot;117&quot; android:keyLabel=&quot;u&quot;/&gt;&#10;        &lt;Key android:codes=&quot;105&quot; android:keyLabel=&quot;i&quot;/&gt;&#10;        &lt;Key android:codes=&quot;100&quot; android:keyLabel=&quot;d&quot;/&gt;&#10;        &lt;Key android:codes=&quot;104&quot; android:keyLabel=&quot;h&quot;/&gt;&#10;        &lt;Key android:codes=&quot;116&quot; android:keyLabel=&quot;t&quot;/&gt;&#10;        &lt;Key android:codes=&quot;110&quot; android:keyLabel=&quot;n&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;115&quot; android:keyLabel=&quot;s&quot;/&gt;&#10;        &lt;Key android:codes=&quot;113&quot; android:keyLabel=&quot;q&quot;/&gt;&#10;        &lt;Key android:codes=&quot;106&quot; android:keyLabel=&quot;j&quot;/&gt;&#10;        &lt;Key android:codes=&quot;107&quot; android:keyLabel=&quot;k&quot;/&gt;&#10;        &lt;Key android:codes=&quot;120&quot; android:keyLabel=&quot;x&quot;/&gt;&#10;        &lt;Key android:codes=&quot;98&quot; android:keyLabel=&quot;b&quot;/&gt;&#10;        &lt;Key android:codes=&quot;109&quot; android:keyLabel=&quot;m&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-2&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-11&quot; android:keyLabel=&quot;☻&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-12&quot; android:keyLabel=&quot;⎋&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_qwertz.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/custom_keypad_qwertz.xml" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;@dimen/key_height&quot;&#10;    &gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;49&quot; android:keyLabel=&quot;1&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;50&quot; android:keyLabel=&quot;2&quot;/&gt;&#10;        &lt;Key android:codes=&quot;51&quot; android:keyLabel=&quot;3&quot;/&gt;&#10;        &lt;Key android:codes=&quot;52&quot; android:keyLabel=&quot;4&quot;/&gt;&#10;        &lt;Key android:codes=&quot;53&quot; android:keyLabel=&quot;5&quot;/&gt;&#10;        &lt;Key android:codes=&quot;54&quot; android:keyLabel=&quot;6&quot;/&gt;&#10;        &lt;Key android:codes=&quot;55&quot; android:keyLabel=&quot;7&quot;/&gt;&#10;        &lt;Key android:codes=&quot;56&quot; android:keyLabel=&quot;8&quot;/&gt;&#10;        &lt;Key android:codes=&quot;57&quot; android:keyLabel=&quot;9&quot;/&gt;&#10;        &lt;Key android:codes=&quot;48&quot; android:keyLabel=&quot;0&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;113&quot; android:keyLabel=&quot;q&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;119&quot; android:keyLabel=&quot;w&quot;/&gt;&#10;        &lt;Key android:codes=&quot;101&quot; android:keyLabel=&quot;e&quot;/&gt;&#10;        &lt;Key android:codes=&quot;114&quot; android:keyLabel=&quot;r&quot;/&gt;&#10;        &lt;Key android:codes=&quot;116&quot; android:keyLabel=&quot;t&quot;/&gt;&#10;        &lt;Key android:codes=&quot;122&quot; android:keyLabel=&quot;z&quot;/&gt;&#10;        &lt;Key android:codes=&quot;117&quot; android:keyLabel=&quot;u&quot;/&gt;&#10;        &lt;Key android:codes=&quot;105&quot; android:keyLabel=&quot;i&quot;/&gt;&#10;        &lt;Key android:codes=&quot;111&quot; android:keyLabel=&quot;o&quot;/&gt;&#10;        &lt;Key android:codes=&quot;112&quot; android:keyLabel=&quot;p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;97&quot; android:keyLabel=&quot;a&quot; android:horizontalGap=&quot;5%p&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;115&quot; android:keyLabel=&quot;s&quot;/&gt;&#10;        &lt;Key android:codes=&quot;100&quot; android:keyLabel=&quot;d&quot;/&gt;&#10;        &lt;Key android:codes=&quot;102&quot; android:keyLabel=&quot;f&quot;/&gt;&#10;        &lt;Key android:codes=&quot;103&quot; android:keyLabel=&quot;g&quot;/&gt;&#10;        &lt;Key android:codes=&quot;104&quot; android:keyLabel=&quot;h&quot;/&gt;&#10;        &lt;Key android:codes=&quot;106&quot; android:keyLabel=&quot;j&quot;/&gt;&#10;        &lt;Key android:codes=&quot;107&quot; android:keyLabel=&quot;k&quot;/&gt;&#10;        &lt;Key android:codes=&quot;108&quot; android:keyLabel=&quot;l&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-1&quot; android:keyLabel=&quot;CAPS&quot; android:keyWidth=&quot;15%p&quot; android:isSticky=&quot;true&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;121&quot; android:keyLabel=&quot;y&quot;/&gt;&#10;        &lt;Key android:codes=&quot;120&quot; android:keyLabel=&quot;x&quot;/&gt;&#10;        &lt;Key android:codes=&quot;99&quot; android:keyLabel=&quot;c&quot;/&gt;&#10;        &lt;Key android:codes=&quot;118&quot; android:keyLabel=&quot;v&quot;/&gt;&#10;        &lt;Key android:codes=&quot;98&quot; android:keyLabel=&quot;b&quot;/&gt;&#10;        &lt;Key android:codes=&quot;110&quot; android:keyLabel=&quot;n&quot;/&gt;&#10;        &lt;Key android:codes=&quot;109&quot; android:keyLabel=&quot;m&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-2&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-11&quot; android:keyLabel=&quot;☻&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-12&quot; android:keyLabel=&quot;⎋&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyWidth=&quot;10%p&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/xml/emojis.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/xml/emojis.xml" />
              <option name="originalContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;45dp&quot;&#10;    &gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-100&quot; android:keyLabel=&quot;&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-101&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-102&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-103&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-104&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-105&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-106&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-107&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-108&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-109&quot; android:keyLabel=&quot;&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;+&quot; android:keyEdgeFlags=&quot;left&quot; android:codes=&quot;43&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;×&quot; android:codes=&quot;215&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;÷&quot; android:codes=&quot;247&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;=&quot; android:codes=&quot;61&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;/&quot; android:codes=&quot;47&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;_&quot; android:codes=&quot;95&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;&amp;lt;&quot; android:codes=&quot;60&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;&amp;gt;&quot; android:codes=&quot;62&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;[&quot; android:codes=&quot;91&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;]&quot; android:keyEdgeFlags=&quot;right&quot; android:codes=&quot;93&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;!&quot; android:keyEdgeFlags=&quot;left&quot; android:codes=&quot;33&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;\@&quot; android:codes=&quot;64&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;#&quot; android:codes=&quot;35&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;$&quot; android:codes=&quot;36&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;%&quot; android:codes=&quot;37&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;^&quot; android:codes=&quot;94&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;&amp;amp;&quot; android:codes=&quot;38&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;*&quot; android:codes=&quot;42&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;(&quot; android:codes=&quot;40&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;)&quot; android:keyEdgeFlags=&quot;right&quot; android:codes=&quot;41&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;1/2&quot;&#10;            android:keyWidth=&quot;15%p&quot;&#10;            android:keyEdgeFlags=&quot;left&quot;&#10;            android:codes=&quot;-10&quot;/&gt;&#10;&#10;        &lt;Key android:keyLabel=&quot;-&quot; android:codes=&quot;45&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;&amp;apos;&quot; android:codes=&quot;39&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;&amp;quot;&quot; android:codes=&quot;34&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;:&quot; android:codes=&quot;58&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;;&quot; android:codes=&quot;59&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;,&quot; android:codes=&quot;44&quot;/&gt;&#10;        &lt;Key android:keyLabel=&quot;?&quot; android:codes=&quot;63&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-10&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-42&quot; android:keyLabel=&quot;◁&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-52&quot; android:keyLabel=&quot;▷&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;&#10;" />
              <option name="updatedContent" value="&lt;Keyboard xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:keyWidth=&quot;10%p&quot;&#10;    android:horizontalGap=&quot;0px&quot;&#10;    android:verticalGap=&quot;3dp&quot;&#10;    android:keyHeight=&quot;45dp&quot;&#10;    &gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-100&quot; android:keyLabel=&quot;&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-101&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-102&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-103&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-104&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-105&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-106&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-107&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-108&quot; android:keyLabel=&quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-109&quot; android:keyLabel=&quot;&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-110&quot; android:keyLabel=&quot;+&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-111&quot; android:keyLabel=&quot;×&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-112&quot; android:keyLabel=&quot;÷&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-113&quot; android:keyLabel=&quot;=&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-114&quot; android:keyLabel=&quot;/&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-115&quot; android:keyLabel=&quot;_&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-116&quot; android:keyLabel=&quot;&amp;lt;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-117&quot; android:keyLabel=&quot;&amp;gt;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-118&quot; android:keyLabel=&quot;[&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-119&quot; android:keyLabel=&quot;]&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:codes=&quot;-120&quot; android:keyLabel=&quot;!&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-121&quot; android:keyLabel=&quot;\@&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-122&quot; android:keyLabel=&quot;#&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-123&quot; android:keyLabel=&quot;$&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-124&quot; android:keyLabel=&quot;%&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-125&quot; android:keyLabel=&quot;^&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-126&quot; android:keyLabel=&quot;&amp;amp;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-127&quot; android:keyLabel=&quot;*&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-128&quot; android:keyLabel=&quot;(&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-129&quot; android:keyLabel=&quot;)&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row&gt;&#10;        &lt;Key android:keyLabel=&quot;1/2&quot;&#10;            android:keyWidth=&quot;15%p&quot;&#10;            android:keyEdgeFlags=&quot;left&quot;&#10;            android:codes=&quot;-10&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-130&quot; android:keyLabel=&quot;-&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-131&quot; android:keyLabel=&quot;&amp;apos;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-132&quot; android:keyLabel=&quot;&amp;quot;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-133&quot; android:keyLabel=&quot;:&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-134&quot; android:keyLabel=&quot;;&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-135&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-136&quot; android:keyLabel=&quot;?&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-5&quot; android:keyLabel=&quot;⌫&quot; android:keyWidth=&quot;15%p&quot; android:isRepeatable=&quot;true&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&#10;    &lt;Row android:rowEdgeFlags=&quot;bottom&quot;&gt;&#10;        &lt;Key android:codes=&quot;-10&quot; android:keyLabel=&quot;!?#&quot; android:keyEdgeFlags=&quot;left&quot;/&gt;&#10;        &lt;Key android:codes=&quot;44&quot; android:keyLabel=&quot;,&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-42&quot; android:keyLabel=&quot;◁&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;32&quot; android:keyLabel=&quot;SPACE&quot; android:keyWidth=&quot;40%p&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-52&quot; android:keyLabel=&quot;▷&quot; android:isRepeatable=&quot;true&quot;/&gt;&#10;        &lt;Key android:codes=&quot;46&quot; android:keyLabel=&quot;.&quot;/&gt;&#10;        &lt;Key android:codes=&quot;-4&quot; android:keyLabel=&quot;↵&quot; android:keyEdgeFlags=&quot;right&quot;/&gt;&#10;    &lt;/Row&gt;&#10;&lt;/Keyboard&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>